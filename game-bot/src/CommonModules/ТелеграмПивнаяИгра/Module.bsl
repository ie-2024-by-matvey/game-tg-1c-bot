
#Область ПрограммныйИнтерфейс

Процедура ПриОбработкеЭлементаОчереди(ЭлементОчередиОбъект, ДанныеЭлемента) Экспорт
	
	Если ДанныеЭлемента.Свойство("message") Тогда
		
		Сообщение = ДанныеЭлемента.message;
		
		Если Не Сообщение.Свойство("from") Тогда
			Возврат;
		КонецЕсли;
		
		Если Не Сообщение.Свойство("text") Тогда
			Возврат;
		КонецЕсли;

		Отправитель = ЭлементОчередиОбъект.Отправитель;
		
		ИдентификаторОтправителя = Сообщение.from.id;
		Текст = Сообщение.text;
		
		ДанныеУчастия = ДанныеУчастия(Отправитель);
		
		Если ДанныеУчастия.Участвует Тогда
			ОбработатьХодИгрока(ДанныеУчастия.Сессия, Отправитель, ИдентификаторОтправителя, Текст);
		Иначе
			ОбработатьПрочийЗапрос(Отправитель, ИдентификаторОтправителя, Текст);
		КонецЕсли;			
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗавершениеРаундов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СессияПивнойИгры.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СессияПивнойИгры КАК СессияПивнойИгры
		|ГДЕ
		|	СессияПивнойИгры.ВремяОкончанияТекущегоРаунда < &ТекущаяДата
		|	И СессияПивнойИгры.Статус = &Статус";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусИгровойСессии.Активна);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗавершениеХода(Выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗапуститьИгру(Сессия) Экспорт
	
	ДокОбъект = Сессия.ПолучитьОбъект();
	
	ДокОбъект.КоличествоРаундов = 50;
	ДокОбъект.ДлинаРаунда = 60;
	ДокОбъект.НачальныйСпрос = 5;
	ДокОбъект.СтартовыеЗапасы = 5;
	ДокОбъект.СтартовыеЗаказы = 5;
	ДокОбъект.СрокДоставки = 3;
	ДокОбъект.ШтрафЗаИзбыток = 0.5;
	ДокОбъект.ШтрафЗаНарушениеЗаказа = 1;
	ДокОбъект.Статус = Перечисления.СтатусИгровойСессии.Активна;
	ДокОбъект.ВремяОкончанияТекущегоРаунда = ТекущаяДата() + 60 + 5;
	ДокОбъект.ТекущийРаунд = 1;
	
	ДокОбъект.ХодИгры.Добавить();
	
	Строка = ДокОбъект.ИзмененияСпроса.Добавить();
	Строка.НомерРаунда = 3;
	Строка.Изменение = 5;
	
	ДокОбъект.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СессияПивнойИгры.Производитель.Код КАК Производитель,
	               |	СессияПивнойИгры.Дистрибьютор.Код КАК Дистрибьютор,
	               |	СессияПивнойИгры.ОптовыйПродавец.Код КАК ОптовыйПродавец,
	               |	СессияПивнойИгры.Ритейлер.Код КАК Ритейлер
	               |ИЗ
	               |	Документ.СессияПивнойИгры КАК СессияПивнойИгры
	               |ГДЕ
	               |	СессияПивнойИгры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Сообщение = "Игра началась. Напишите число - какой заказ вы хотите сделать.";
	
	Если ЗначениеЗаполнено(Выборка.Производитель) Тогда
		ИнтеграцияТелеграм.ОтправитьСообщение(Выборка.Производитель, Сообщение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Дистрибьютор) Тогда
		ИнтеграцияТелеграм.ОтправитьСообщение(Выборка.Дистрибьютор, Сообщение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ОптовыйПродавец) Тогда
		ИнтеграцияТелеграм.ОтправитьСообщение(Выборка.ОптовыйПродавец, Сообщение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Ритейлер) Тогда
		ИнтеграцияТелеграм.ОтправитьСообщение(Выборка.Ритейлер, Сообщение);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеУчастия(Отправитель)
	
	Результат = Новый Структура;
	Результат.Вставить("Участвует", Ложь);
	Результат.Вставить("Сессия", Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СессииУчастников.Сессия КАК Сессия
	               |ИЗ
	               |	РегистрСведений.СессииУчастников КАК СессииУчастников
	               |ГДЕ
	               |	СессииУчастников.Участник = &Участник
	               |	И СессииУчастников.Сессия.Статус <> &Завершена";
	
	Запрос.УстановитьПараметр("Участник", Отправитель);
	Запрос.УстановитьПараметр("Завершена", Перечисления.СтатусИгровойСессии.Завершена);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат.Участвует = Истина;
		Результат.Сессия = Выборка.Сессия;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработатьПрочийЗапрос(Отправитель, ИдентификаторОтправителя, Текст)
	
	Если Текст = "Участвовать!" Тогда
		
		ДобавитьВИгровуюСессию(Отправитель, ИдентификаторОтправителя, Текст);
		
	Иначе
		
		ДополнительныеСвойства = ИнтеграцияТелеграм.ДополнительныеСвойстваИсходящегоСообщения();	
		ДополнительныеСвойства.Клавиатура = КлавиатураПриглашенияВИгру();
		
		Ответ = "Вы написали боту для проведения пивной игры в рамках конференции Анализ & Управление в ИТ-проектах 2024. Для участия в игре нажмите кнопку Участвовать! Игровая сессия будет длиться около часа, для качественной игры необходима активность всех игроков. Просьба не покидать игру до окончания.";
		
		ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ, ДополнительныеСвойства);
		
	КонецЕсли;
	
КонецПроцедуры

Функция КлавиатураПриглашенияВИгру()
	
	СтрокиКлавиатуры = Новый Массив;
	СтрокаКлавиатуры = Новый Массив;
	
	Кнопка = Новый Структура;
	Кнопка.Вставить("text", "Участвовать!");
	СтрокаКлавиатуры.Добавить(Кнопка);
	
	СтрокиКлавиатуры.Добавить(СтрокаКлавиатуры);
	
	Клавиатура = Новый Структура;
	Клавиатура.Вставить("keyboard", СтрокиКлавиатуры);
	Клавиатура.Вставить("resize_keyboard", Истина);
	
	Возврат Клавиатура;
	
КонецФункции

Процедура ДобавитьВИгровуюСессию(Отправитель, ИдентификаторОтправителя, Текст)
	
	ЗапретСтарта = Константы.ЗапретСтартаНовыхСессийПивнойИгры.Получить();
	
	Если ЗапретСтарта Тогда
		Ответ = "Прием новых игроков завершен.";
		ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СессияПивнойИгры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.СессияПивнойИгры КАК СессияПивнойИгры
	               |ГДЕ
	               |	СессияПивнойИгры.Статус = &Статус";
	
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусИгровойСессии.ОжидаетЗапуска);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗапуститьИгру = Ложь;
	ДокОбъект = Неопределено;
	
	Если Выборка.Следующий() Тогда
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если ДокОбъект.Производитель.Пустая() Тогда
			Ответ = "Вы зарегистрированы в игре в роли Производитель";
			ДокОбъект.Производитель = Отправитель;
		ИначеЕсли ДокОбъект.Дистрибьютор.Пустая() Тогда
			Ответ = "Вы зарегистрированы в игре в роли Дистрибьютор";
			ДокОбъект.Дистрибьютор = Отправитель;
		ИначеЕсли ДокОбъект.ОптовыйПродавец.Пустая() Тогда
			Ответ = "Вы зарегистрированы в игре в роли Оптовый продавец";
			ДокОбъект.ОптовыйПродавец = Отправитель;
		Иначе
			Ответ = "Вы зарегистрированы в игре в роли Ритейлер";
			ДокОбъект.Ритейлер = Отправитель;
			ЗапуститьИгру = Истина;
		КонецЕсли;
		
		ДокОбъект.Записать();
		
	Иначе
		
		Ответ = "Вы зарегистрированы в игре в роли Производитель";
		
		ДокОбъект = Документы.СессияПивнойИгры.СоздатьДокумент();
		ДокОбъект.Статус = Перечисления.СтатусИгровойСессии.ОжидаетЗапуска;
		ДокОбъект.Производитель = Отправитель;
		ДокОбъект.Дата = ТекущаяДата();
		ДокОбъект.Записать();
		
	КонецЕсли;
	
	Запись = РегистрыСведений.СессииУчастников.СоздатьМенеджерЗаписи();
	Запись.Участник = Отправитель;
	Запись.Сессия = ДокОбъект.Ссылка;
	Запись.Записать();
	
	Ответ = Ответ + Символы.ПС + "Игра начнется, как только зарегистрируются 4 участника. Я напишу, когда игра начнется.";
	
	ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
	
	Если ЗапуститьИгру Тогда
		ЗапуститьИгру(ДокОбъект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьХодИгрока(Сессия, Отправитель, ИдентификаторОтправителя, Текст)	
	
	ДокОбъект = Сессия.ПолучитьОбъект();
	
	Если ДокОбъект.Статус = Перечисления.СтатусИгровойСессии.ОжидаетЗапуска Тогда
		Ответ = "Игра еще не началась, дождитесь других игроков";
		ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
		Возврат;
	КонецЕсли;
	
	Попытка
		ЗаказИгрока = Число(Текст);
	Исключение
		Ответ = "Заказ должен быть целым положительным числом. В сообщении не должно быть букв и спец.символов.";
		ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
		Возврат;
	КонецПопытки;
	
	Если ЗаказИгрока < 0 Тогда
		Ответ = "Заказ не может быть отрицательным";
		ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
		Возврат;
	КонецЕсли;
	
	Если ДокОбъект.Производитель = Отправитель Тогда
		ПозицияИгрока = "1";
	ИначеЕсли ДокОбъект.Дистрибьютор = Отправитель Тогда
		ПозицияИгрока = "2";
	ИначеЕсли ДокОбъект.ОптовыйПродавец = Отправитель Тогда
		ПозицияИгрока = "3";
	ИначеЕсли ДокОбъект.Ритейлер = Отправитель Тогда
		ПозицияИгрока = "4";
	Иначе
		ВызватьИсключение "Игрок не участвует в текущей сессии";
	КонецЕсли;
	
	Если ДокОбъект.ТекущийРаунд > ДокОбъект.ХодИгры.Количество() Тогда
		ВызватьИсключение "Ошибка внутреннего состояния игры";
	КонецЕсли;
	
	ДанныеХода = ДокОбъект.ХодИгры[ДокОбъект.ТекущийРаунд - 1];
	ДанныеХода["Заказ" + ПозицияИгрока] = ЗаказИгрока;
	
	ДокОбъект.Записать();
	
	Ответ = СтрШаблон("Заказ на %1 шт. принят", ЗаказИгрока);
	ИнтеграцияТелеграм.ОтправитьСообщение(ИдентификаторОтправителя, Ответ);
	
	Если ЗначениеЗаполнено(ДанныеХода.Заказ1)
		И ЗначениеЗаполнено(ДанныеХода.Заказ2)
		И ЗначениеЗаполнено(ДанныеХода.Заказ3)
		И ЗначениеЗаполнено(ДанныеХода.Заказ4) Тогда
		
		ЗавершениеХода(Сессия);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершениеХода(Сессия)
	
	ДокОбъект = Сессия.ПолучитьОбъект();
	
	ТекущийРаунд = ДокОбъект.ТекущийРаунд;
	ЗавершитьИгру = Ложь;
	
	ДокОбъект.РассчитатьРаунд(ДокОбъект.ТекущийРаунд);
	
	Если ДокОбъект.ТекущийРаунд >= ДокОбъект.КоличествоРаундов Тогда
		ЗавершитьИгру = Истина;
		ДокОбъект.Статус = Перечисления.СтатусИгровойСессии.Завершена;
	Иначе
		ДокОбъект.ТекущийРаунд = ТекущийРаунд + 1;
		ДокОбъект.ХодИгры.Добавить();
		ДокОбъект.ВремяОкончанияТекущегоРаунда = ТекущаяДата() + ДокОбъект.ДлинаРаунда;
	КонецЕсли;
	
	ДокОбъект.Записать();
	
	Если ЗавершитьИгру Тогда
		ОтправитьРезультатыИгры(Сессия, ТекущийРаунд);
	Иначе
		ОтправитьРезультатХода(Сессия, ТекущийРаунд);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьРезультатыИгры(Сессия, ТекущийРаунд) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СессияПивнойИгры.Производитель.Код КАК Игрок1,
		|	СессияПивнойИгры.Дистрибьютор.Код КАК Игрок2,
		|	СессияПивнойИгры.ОптовыйПродавец.Код КАК Игрок3,
		|	СессияПивнойИгры.Ритейлер.Код КАК Игрок4,
		|	СессияПивнойИгрыХодИгры.Заказ1 КАК Заказ1,
		|	СессияПивнойИгрыХодИгры.Запас1 КАК Запас1,
		|	СессияПивнойИгрыХодИгры.Поступление1 КАК Поступление1,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ1 КАК ВходящийЗаказ1,
		|	СессияПивнойИгрыХодИгры.Отправка1 КАК Отправка1,
		|	СессияПивнойИгрыХодИгры.Долг1 КАК Долг1,
		|	СессияПивнойИгрыХодИгры.Заказ2 КАК Заказ2,
		|	СессияПивнойИгрыХодИгры.Запас2 КАК Запас2,
		|	СессияПивнойИгрыХодИгры.Поступление2 КАК Поступление2,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ2 КАК ВходящийЗаказ2,
		|	СессияПивнойИгрыХодИгры.Отправка2 КАК Отправка2,
		|	СессияПивнойИгрыХодИгры.Долг2 КАК Долг2,
		|	СессияПивнойИгрыХодИгры.Заказ3 КАК Заказ3,
		|	СессияПивнойИгрыХодИгры.Запас3 КАК Запас3,
		|	СессияПивнойИгрыХодИгры.Поступление3 КАК Поступление3,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ3 КАК ВходящийЗаказ3,
		|	СессияПивнойИгрыХодИгры.Отправка3 КАК Отправка3,
		|	СессияПивнойИгрыХодИгры.Долг3 КАК Долг3,
		|	СессияПивнойИгрыХодИгры.Заказ4 КАК Заказ4,
		|	СессияПивнойИгрыХодИгры.Запас4 КАК Запас4,
		|	СессияПивнойИгрыХодИгры.Поступление4 КАК Поступление4,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ4 КАК ВходящийЗаказ4,
		|	СессияПивнойИгрыХодИгры.Отправка4 КАК Отправка4,
		|	СессияПивнойИгрыХодИгры.Долг4 КАК Долг4,
		|	Штрафы.Штраф1 КАК Штраф1,
		|	Штрафы.Штраф2 КАК Штраф2,
		|	Штрафы.Штраф3 КАК Штраф3,
		|	Штрафы.Штраф4 КАК Штраф4,
		|	СессияПивнойИгры.Номер КАК Номер
		|ИЗ
		|	Документ.СессияПивнойИгры КАК СессияПивнойИгры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СессияПивнойИгры.ХодИгры КАК СессияПивнойИгрыХодИгры
		|		ПО (СессияПивнойИгрыХодИгры.Ссылка = СессияПивнойИгры.Ссылка)
		|			И (СессияПивнойИгрыХодИгры.НомерСтроки = &НомерРаунда)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(СессияПивнойИгрыХодИгры.Штраф1) КАК Штраф1,
		|			СУММА(СессияПивнойИгрыХодИгры.Штраф2) КАК Штраф2,
		|			СУММА(СессияПивнойИгрыХодИгры.Штраф3) КАК Штраф3,
		|			СУММА(СессияПивнойИгрыХодИгры.Штраф4) КАК Штраф4,
		|			СессияПивнойИгрыХодИгры.Ссылка КАК Ссылка
		|		ИЗ
		|			Документ.СессияПивнойИгры.ХодИгры КАК СессияПивнойИгрыХодИгры
		|		ГДЕ
		|			СессияПивнойИгрыХодИгры.Ссылка = &Ссылка
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СессияПивнойИгрыХодИгры.Ссылка) КАК Штрафы
		|		ПО СессияПивнойИгры.Ссылка = Штрафы.Ссылка
		|ГДЕ
		|	СессияПивнойИгры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сессия);
	Запрос.УстановитьПараметр("НомерРаунда", ТекущийРаунд);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	ШаблонСообщения = 
		"Раунд %1 заврешен:
		|	- Вы заказали: %2 шт.
		|	- Вам поступило ранее заказанных: %3 шт.
		|	- Клиенты заказали в этом раунде: %4 шт.
		|	- Вы отправили вашим клиентам: %5 шт.
		|	- Остаток на складе на конец раунда: %6 шт.
		|	- Задолженность перед клиентами на конец раунда: %7 шт.
		|
		|Игра завершена! Сумма штрафных баллов: %8.
		|
		|%9";
	
	РаспределениеМест = Новый ТаблицаЗначений;
	РаспределениеМест.Колонки.Добавить("Место", Новый ОписаниеТипов("Число"));
	РаспределениеМест.Колонки.Добавить("Штраф", Новый ОписаниеТипов("Число"));
	РаспределениеМест.Колонки.Добавить("НомерИгрока", Новый ОписаниеТипов("Число"));
	
	Для Сч = 1 По 4 Цикл
		Строка = РаспределениеМест.Добавить();
		Строка.НомерИгрока = Сч;
		Строка.Штраф = Выборка["Штраф" + Сч];
	КонецЦикла;
	
	РаспределениеМест.Сортировать("Штраф");
	
	Для Сч = 1 По 4 Цикл
		РаспределениеМест[Сч - 1].Место = Сч;
	КонецЦикла;
	
	ИтогиИгры = ИтогиИгры(Сессия);
	
	Для Сч = 1 По 4 Цикл
		
		Если Не ЗначениеЗаполнено(Выборка["Игрок" + Сч]) Тогда
			Продолжить;
		КонецЕсли;
		
		Фильтр = Новый Структура("НомерИгрока", Сч);
		НайденныеСтроки = РаспределениеМест.НайтиСтроки(Фильтр);
		Место = НайденныеСтроки[0].Место;
		
		Если Место = 1 Тогда
			ФразаМесто = "У вас лучший результат в вашей сессии.";
		Иначе
			ФразаМесто = СтрШаблон("Вы заняли %1 место в вашей сессии.", Место);
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения,
			ТекущийРаунд,
			Выборка["Заказ" + Сч],
			Выборка["Поступление" + Сч],
			Выборка["ВходящийЗаказ" + Сч],
			Выборка["Отправка" + Сч],
			Выборка["Запас" + Сч],
			Выборка["Долг" + Сч],
			Выборка["Штраф" + Сч],
			ФразаМесто);
			
		Получатель = Выборка["Игрок" + Сч];
		НомерСессии = УдалитьЛидирующиеНули(Выборка.Номер);
			
		ИнтеграцияТелеграм.ОтправитьСообщение(Получатель, ТекстСообщения);
		
		ИнтеграцияТелеграм.ОтправитьДокумент(Получатель, 
			ИтогиИгры, 
			СтрШаблон("Итоги игровой сессии %1.xlsx", НомерСессии));
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИтогиИгры(Сессия)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = Документы.СессияПивнойИгры.ПолучитьМакет("РезультатыСессии");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СессияПивнойИгрыХодИгры.НомерСтроки КАК НомерСтроки,
		|	СессияПивнойИгрыХодИгры.Заказ1 КАК Заказ1,
		|	СессияПивнойИгрыХодИгры.Запас1 КАК Запас1,
		|	СессияПивнойИгрыХодИгры.Поступление1 КАК Поступление1,
		|	СессияПивнойИгрыХодИгры.Отправка1 КАК Отправка1,
		|	СессияПивнойИгрыХодИгры.Долг1 КАК Долг1,
		|	СессияПивнойИгрыХодИгры.Штраф1 КАК Штраф1,
		|	СессияПивнойИгрыХодИгры.Заказ2 КАК Заказ2,
		|	СессияПивнойИгрыХодИгры.Запас2 КАК Запас2,
		|	СессияПивнойИгрыХодИгры.Поступление2 КАК Поступление2,
		|	СессияПивнойИгрыХодИгры.Отправка2 КАК Отправка2,
		|	СессияПивнойИгрыХодИгры.Долг2 КАК Долг2,
		|	СессияПивнойИгрыХодИгры.Штраф2 КАК Штраф2,
		|	СессияПивнойИгрыХодИгры.Заказ3 КАК Заказ3,
		|	СессияПивнойИгрыХодИгры.Запас3 КАК Запас3,
		|	СессияПивнойИгрыХодИгры.Поступление3 КАК Поступление3,
		|	СессияПивнойИгрыХодИгры.Отправка3 КАК Отправка3,
		|	СессияПивнойИгрыХодИгры.Долг3 КАК Долг3,
		|	СессияПивнойИгрыХодИгры.Штраф3 КАК Штраф3,
		|	СессияПивнойИгрыХодИгры.Заказ4 КАК Заказ4,
		|	СессияПивнойИгрыХодИгры.Запас4 КАК Запас4,
		|	СессияПивнойИгрыХодИгры.Поступление4 КАК Поступление4,
		|	СессияПивнойИгрыХодИгры.Отправка4 КАК Отправка4,
		|	СессияПивнойИгрыХодИгры.Долг4 КАК Долг4,
		|	СессияПивнойИгрыХодИгры.Штраф4 КАК Штраф4,
		|	СессияПивнойИгрыХодИгры.Спрос КАК Спрос
		|ИЗ
		|	Документ.СессияПивнойИгры.ХодИгры КАК СессияПивнойИгрыХодИгры
		|ГДЕ
		|	СессияПивнойИгрыХодИгры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сессия);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");
	ТабличныйДокумент.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.XLSX);
	
	ДанныеФайла = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	Попытка
		УдалитьФайлы(ИмяВременногоФайла);
	Исключение
		// Файл уже удален
	КонецПопытки;
	
	Возврат ДанныеФайла;
	
КонецФункции

Процедура ОтправитьРезультатХода(Сессия, ТекущийРаунд) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СессияПивнойИгры.Производитель.Код КАК Игрок1,
		|	СессияПивнойИгры.Дистрибьютор.Код КАК Игрок2,
		|	СессияПивнойИгры.ОптовыйПродавец.Код КАК Игрок3,
		|	СессияПивнойИгры.Ритейлер.Код КАК Игрок4,
		|	СессияПивнойИгрыХодИгры.Заказ1 КАК Заказ1,
		|	СессияПивнойИгрыХодИгры.Запас1 КАК Запас1,
		|	СессияПивнойИгрыХодИгры.Поступление1 КАК Поступление1,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ1 КАК ВходящийЗаказ1,
		|	СессияПивнойИгрыХодИгры.Отправка1 КАК Отправка1,
		|	СессияПивнойИгрыХодИгры.Долг1 КАК Долг1,
		|	СессияПивнойИгрыХодИгры.Заказ2 КАК Заказ2,
		|	СессияПивнойИгрыХодИгры.Запас2 КАК Запас2,
		|	СессияПивнойИгрыХодИгры.Поступление2 КАК Поступление2,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ2 КАК ВходящийЗаказ2,
		|	СессияПивнойИгрыХодИгры.Отправка2 КАК Отправка2,
		|	СессияПивнойИгрыХодИгры.Долг2 КАК Долг2,
		|	СессияПивнойИгрыХодИгры.Заказ3 КАК Заказ3,
		|	СессияПивнойИгрыХодИгры.Запас3 КАК Запас3,
		|	СессияПивнойИгрыХодИгры.Поступление3 КАК Поступление3,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ3 КАК ВходящийЗаказ3,
		|	СессияПивнойИгрыХодИгры.Отправка3 КАК Отправка3,
		|	СессияПивнойИгрыХодИгры.Долг3 КАК Долг3,
		|	СессияПивнойИгрыХодИгры.Заказ4 КАК Заказ4,
		|	СессияПивнойИгрыХодИгры.Запас4 КАК Запас4,
		|	СессияПивнойИгрыХодИгры.Поступление4 КАК Поступление4,
		|	СессияПивнойИгрыХодИгры.ВходящийЗаказ4 КАК ВходящийЗаказ4,
		|	СессияПивнойИгрыХодИгры.Отправка4 КАК Отправка4,
		|	СессияПивнойИгрыХодИгры.Долг4 КАК Долг4
		|ИЗ
		|	Документ.СессияПивнойИгры КАК СессияПивнойИгры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СессияПивнойИгры.ХодИгры КАК СессияПивнойИгрыХодИгры
		|		ПО (СессияПивнойИгрыХодИгры.Ссылка = СессияПивнойИгры.Ссылка)
		|			И (СессияПивнойИгрыХодИгры.НомерСтроки = &НомерРаунда)
		|ГДЕ
		|	СессияПивнойИгры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Сессия);
	Запрос.УстановитьПараметр("НомерРаунда", ТекущийРаунд);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	ШаблонСообщения = 
		"Раунд %1 заврешен:
		|	- Вы заказали: %2 шт.
		|	- Вам поступило ранее заказанных: %3 шт.
		|	- Клиенты заказали в этом раунде: %4 шт.
		|	- Вы отправили вашим клиентам: %5 шт.
		|	- Остаток на складе на конец раунда: %6 шт.
		|	- Задолженность перед клиентами на конец раунда: %7 шт.
		|
		|Начинается новый раунд, напишите число - какой заказ вы хотите сделать.";
	
	Для Сч = 1 По 4 Цикл
		
		Если Не ЗначениеЗаполнено(Выборка["Игрок" + Сч]) Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения,
			ТекущийРаунд,
			Выборка["Заказ" + Сч],
			Выборка["Поступление" + Сч],
			Выборка["ВходящийЗаказ" + Сч],
			Выборка["Отправка" + Сч],
			Выборка["Запас" + Сч],
			Выборка["Долг" + Сч]);
			
		ИнтеграцияТелеграм.ОтправитьСообщение(Выборка["Игрок" + Сч], ТекстСообщения);		
		
	КонецЦикла;
	
КонецПроцедуры

Функция УдалитьЛидирующиеНули(Строка)
	
	Результат = Строка;
	
	Пока СтрНачинаетсяС(Результат, "0") Цикл
		Результат = Прав(Результат, СтрДлина(Результат - 1));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
	
#КонецОбласти





